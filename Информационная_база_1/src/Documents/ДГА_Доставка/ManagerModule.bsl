
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт   
	
	// Транспортной накладной
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ДГА_ТранспортнаяНакладная";
	КомандаПечати.Представление = НСтр("ru = 'Транспортная накладная'");
	КомандаПечати.Порядок = 25;  
	
	// Анкеты доставки
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ДГА_АнкетаДоставки";
	КомандаПечати.Представление = НСтр("ru = 'Анкета доставки'");
	КомандаПечати.Порядок = 26;
	
	// Комплект документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ДГА_ТранспортнаяНакладная,ДГА_АнкетаДоставки";
	КомандаПечати.Представление = НСтр("ru = 'Комплект документов'");
	КомандаПечати.Порядок = 175;   
	
	// Печать договора на доставку
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ДГА_ПечатьДоговораНаДоставку";
	КомандаПечати.Представление = НСтр("ru = 'Договор на доставку'");
	КомандаПечати.Порядок = 275;


	
КонецПроцедуры 

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "ДГА_ТранспортнаяНакладная");
	Если ПечатнаяФорма <> Неопределено Тогда
		ПечатнаяФорма.ТабличныйДокумент = ПечатьТранспортнойНакладной(МассивОбъектов, ОбъектыПечати);
		ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Транспортная накладная'");
		ПечатнаяФорма.ПолныйПутьКМакету = "Документ.ДГА_Доставка.ПФ_MXL_ДГА_Доставка";
	КонецЕсли; 
	
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "ДГА_АнкетаДоставки");
	Если ПечатнаяФорма <> Неопределено Тогда
		ПечатнаяФорма.ТабличныйДокумент = ПечатьАнкетыДоставки(МассивОбъектов, ОбъектыПечати);
		ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Анкета доставки'");
		ПечатнаяФорма.ПолныйПутьКМакету = "Документ.ДГА_Доставка.ПФ_MXL_ДГА_Анкета";
	КонецЕсли;   
	
		ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "ДГА_ПечатьДоговораНаДоставку");
	Если ПечатнаяФорма <> Неопределено Тогда
		ОфисныеДокументы = НапечататьДоговорDOCX(МассивОбъектов);
		ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Договор на доставку'");
		ПечатнаяФорма.ОфисныеДокументы = ОфисныеДокументы;
	КонецЕсли;


КонецПроцедуры   


Функция НапечататьДоговорDOCX(МассивОбъектов)
    // Создаём пустое соответствие для размещения печатных форм OpenXМL — результат функции
    ОфисныеДокументы = Новый Соответствие;
    
    // Готовим макет для формирования печатной формы OpenXML
    МакетДокумента = УправлениеПечатью.МакетПечатнойФормы("Документ.ДГА_Доставка.ПФ_DOC_ДоговорНаДоставкуНовый");
    Макет = УправлениеПечатью.ИнициализироватьМакетОфисногоДокумента(МакетДокумента,
        Неопределено);  
        
    // Создаём структуру областей формируемой печатной формы OpenXМL
    ОписаниеОбластей = Новый Структура;
    УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "Заголовок", "Общая");
    УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "Шапка", "Общая");  
	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "ШапкаОписаниеГруза", "Общая");
	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "ОписаниеГруза", "Общая");
	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "ОбМасГруза", "Общая");
	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "ТелоДоговора", "Общая");
 
    // Получаем данные для печати из базы данных
    // Функцию ДанныеДляПечатиДоговора необходимо разработать самостоятельно
    ДанныеДляПечати = ДанныеДляПечатиДоговора(МассивОбъектов);
    
    Для Каждого ДанныеДокумента Из ДанныеДляПечати Цикл 
		
		
		
        // Готовим печатную форму в формате офисного документа
        ПечатнаяФорма = УправлениеПечатью.ИнициализироватьПечатнуюФорму(Неопределено, Неопределено, Макет);
        
        Область = УправлениеПечатью.ОбластьМакета(Макет, ОписаниеОбластей["Заголовок"]);
        УправлениеПечатью.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, ДанныеДокумента); 
		
		//Область шапка
		Областьшапка = УправлениеПечатью.ОбластьМакета(Макет, ОписаниеОбластей["Шапка"]);
        УправлениеПечатью.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Областьшапка, ДанныеДокумента);
		
		////Наполняем область данными из табличной части
		
		ОбластьШапкаОписаниеГруза = УправлениеПечатью.ОбластьМакета(Макет, ОписаниеОбластей["ШапкаОписаниеГруза"]);
		УправлениеПечатью.ПрисоединитьОбласть(ПечатнаяФорма, ОбластьШапкаОписаниеГруза);		
		ДанныеТЧ = Новый Структура;
		Если ДанныеТЧ.Количество() > 0 Тогда
			ДанныеТЧ.Очистить();
		КонецЕсли;
		
		ОбластьОписаниеГруза = УправлениеПечатью.ОбластьМакета(Макет, ОписаниеОбластей["ОписаниеГруза"]);
		//Получаем детали из ТЧ Товары обрабатываемого документа
		СтруктураОтбора = Новый Структура;
		СтруктураОтбора.Вставить("Ссылка", ДанныеДокумента.Ссылка);
		
		МассивСтрокИзТЧ_Товары = ДанныеДокумента.ТЗ_ТабличнаяЧастьТовары.НайтиСтроки(СтруктураОтбора); 
		
		
		ТЗ_ТабличнаяЧастьТоварыСОтбором = ДанныеДокумента.ТЗ_ТабличнаяЧастьТовары.Скопировать();
		ТЗ_ТабличнаяЧастьТоварыСОтбором.Очистить();
		
		
		Для Каждого СтрокаМассива из МассивСтрокИзТЧ_Товары Цикл
			СтрокаТЗ = ТЗ_ТабличнаяЧастьТоварыСОтбором.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТЗ, СтрокаМассива);
		КонецЦикла;

		
		//Наполняем таблицу в документе DOCX
		Для Каждого СтрокаТЧ из ТЗ_ТабличнаяЧастьТоварыСОтбором Цикл   
			
			ДанныеТЧ.Вставить("НомерНоменклатура", ТЗ_ТабличнаяЧастьТоварыСОтбором.Индекс(СтрокаТЧ) + 1);
			ДанныеТЧ.Вставить("Количество", СтрокаТЧ.Количество);    
			ДанныеТЧ.Вставить("Номенклатура", СтрокаТЧ.Номенклатура);
			
			УправлениеПечатью.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, ОбластьОписаниеГруза, ДанныеТЧ);
		КонецЦикла;
		
		
		//Находим общий вес
		ТЗ_ТабличнаяЧастьТоварыСОтбором.Свернуть(,"ОбщийВесГруза");
		ДанныеДокумента.Вставить("ОбщийВесГруза", ТЗ_ТабличнаяЧастьТоварыСОтбором[0].ОбщийВесГруза);
		//
		////Область ТелоДоговора
		ОбластьТелоДоговора = УправлениеПечатью.ОбластьМакета(Макет, ОписаниеОбластей["ТелоДоговора"]);
		УправлениеПечатью.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, ОбластьТелоДоговора, ДанныеДокумента);
		

        АдресХранилищаПечатнойФормы = УправлениеПечатью.СформироватьДокумент(ПечатнаяФорма);
        ОфисныеДокументы.Вставить(АдресХранилищаПечатнойФормы, Строка(ДанныеДокумента.Ссылка));
        УправлениеПечатью.ОчиститьСсылки(ПечатнаяФорма);
        
    КонецЦикла;        
    
    УправлениеПечатью.ОчиститьСсылки(Макет);
    
    Возврат ОфисныеДокументы;
    
КонецФункции  

//@skip-check module-structure-method-in-regions
Функция ДанныеДляПечатиДоговора(МассивОбъектов);  
	//Данные из документов и справочников
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДГА_Доставка.Ссылка КАК Ссылка,
		|	ДГА_Доставка.Дата КАК Дата,
		|	ДГА_Доставка.Номер КАК Номер,
		|	ДГА_Доставка.Организация КАК Организация,
		|	ДГА_Доставка.Контрагент КАК Контрагент,
		|	ДГА_Доставка.ПодписантДляДоговораОтправитель КАК ПодписантДляДоговораОтправитель,
		|	ДГА_Доставка.ПодписантДляДоговораПолучатель КАК ПодписантДляДоговораПолучатель,
		|	ДГА_Доставка.ПодписантПолучательНаОсновании КАК ПодписантПолучательНаОсновании,
		|	ДГА_Доставка.Основание.Основание.Ссылка КАК СуммаДокумента,
		|	ДГА_Доставка.АдресДоставки КАК АдресДоставки,
		|	ДГА_Доставка.ПолучательГруза КАК ПолучательГруза,
		|	ДГА_Доставка.Организация.ИНН КАК ОрганизацияИНН,
		|	ДГА_Доставка.Организация.КПП КАК ОрганизацияКПП,
		|	ДГА_Доставка.Контрагент.ИНН КАК КонтрагентИНН,
		|	ДГА_Доставка.Контрагент.КПП КАК КонтрагентКПП,
		|	ДГА_Доставка.АдресОрганизации КАК АдресОрганизации,
		|	ДГА_Доставка.АдресКонтрагента КАК АдресКонтрагента,
		|	ДГА_Доставка.УведомлениеСрывДоставкиДней КАК УведомлениеСрывДоставкиДней,
		|	ДГА_Доставка.ПеняПроцентЗадержкаПлатежа КАК ПеняПроцентЗадержкаПлатежа,
		|	ДГА_Доставка.ПеняПроцент КАК ПеняПроцент,
		|	ДГА_Доставка.ПериодПогрузки КАК ПериодПогрузки,
		|	ДГА_Доставка.ДатаОтгузка КАК ДатаОтгрузка,
		|	ДГА_Доставка.ПериодРазгрузки КАК ПериодРазгрузки,
		|	ДГА_Доставка.МестоПередечиГрузаПеревозчику КАК МестоПередечиГрузаПеревозчику,
		|	ДГА_Доставка.ДокументПолучатель КАК ДокументПолучатель,
		|	ДГА_Доставка.НомерСерияДокумента КАК НомерСерияДокумента,
		|	ДГА_Доставка.КемВыданДокумент КАК КемВыданДокумент,
		|	ДГА_Доставка.СтоимостьДоставки КАК СтоимостьДоставки,
		|	ДГА_Доставка.СтоимостьДоставкиПогрузкаРазгрузка КАК СтоимостьДоставкиПогрузкаРазгрузка,
		|	ДГА_Доставка.ДатаПлатежа КАК ДатаПлатежа,
		|	РеализацияТоваровУслуг.СуммаДокумента КАК СуммаДокумента1,
		|	ДГА_Доставка.ПодписантОтправительНаОсновании КАК ПодписантОтправительНаОсновании,
		|	ДГА_Доставка.Товары.(
		|		Ссылка КАК Ссылка,
		|		НомерСтроки КАК НомерСтроки,
		|		Номенклатура КАК Номенклатура,
		|		Количество КАК Количество
		|	) КАК Товары
		|ИЗ
		|	Документ.ДГА_Доставка КАК ДГА_Доставка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|		ПО ДГА_Доставка.Основание = РеализацияТоваровУслуг.Ссылка
		|ГДЕ
		|	ДГА_Доставка.Ссылка В(&Ссылка)";
	
	//Данные из табличной части документа, описание груза
	ЗапросТЧ = Новый Запрос;
	ЗапросТЧ.Текст = 
		"ВЫБРАТЬ
		|	ДГА_ДоставкаТовары.Ссылка КАК СсылкаТЧ,
		|	ДГА_ДоставкаТовары.НомерСтроки КАК НомерСтроки,
		|	ДГА_ДоставкаТовары.Номенклатура КАК Номенклатура,
		|	ДГА_ДоставкаТовары.Количество КАК Количество,
		|	ДГА_СпецификацияНоменклатуры.ВесЕд КАК ВесЕд,
		|	ДГА_ДоставкаТовары.Количество * ДГА_СпецификацияНоменклатуры.ВесЕд КАК ОбщийВесГруза,
		|	ДГА_Доставка.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ДГА_Доставка КАК ДГА_Доставка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ДГА_Доставка.Товары КАК ДГА_ДоставкаТовары
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДГА_СпецификацияНоменклатуры КАК ДГА_СпецификацияНоменклатуры
		|			ПО ДГА_ДоставкаТовары.Номенклатура = ДГА_СпецификацияНоменклатуры.Владелец
		|		ПО ДГА_Доставка.Товары.Ссылка = ДГА_ДоставкаТовары.Ссылка
		|ГДЕ
		|	ДГА_Доставка.Ссылка В(&Ссылка)";
	
	Запрос.УстановитьПараметр("Ссылка", МассивОбъектов);
    ЗапросТЧ.УстановитьПараметр("Ссылка", МассивОбъектов);
	
	РезультатЗапроса = Запрос.Выполнить();
    РезультатЗапросаТЧ = ЗапросТЧ.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	ТЗ_ТабличнаяЧастьТовары = РезультатЗапросаТЧ.Выгрузить();  
	ТЗ_ТабличнаяЧастьТовары.Свернуть("Ссылка ,Номенклатура, ВесЕд", "Количество, ОбщийВесГруза");  
	
	ДокументыДоставка = Новый Массив;
	
	Пока Выборка.Следующий() Цикл                       
		
	
		
		СтоимостьДоставкиИтого = Выборка.СтоимостьДоставки + Выборка.СтоимостьДоставкиПогрузкаРазгрузка;
		
		ДанныеДоставки = Новый Структура;
		
		ДанныеДоставки.Вставить("Дата", Выборка.Дата);
		ДанныеДоставки.Вставить("Номер", Выборка.Номер);
		ДанныеДоставки.Вставить("Ссылка", Выборка.Ссылка); 
		
		
		ДанныеДоставки.Вставить("город", Константы.ДГА_ГородОрганизации.Получить());
		ДанныеДоставки.Вставить("ДатаПечати", Формат(ТекущаяДатаСеанса(), "ДЛФ=DD"));	

		ДанныеДоставки.Вставить("Организация", Выборка.Организация);
		ДанныеДоставки.Вставить("ПодписантДляДоговораОтправитель", Выборка.ПодписантДляДоговораОтправитель);
		ДанныеДоставки.Вставить("ПодписантДляДоговораПолучатель", Выборка.ПодписантДляДоговораПолучатель);  
		ДанныеДоставки.Вставить("ПодписантОтправительНаОсновании", Выборка.ПодписантОтправительНаОсновании);
		ДанныеДоставки.Вставить("ПодписантПолучательНаОсновании", Выборка.ПодписантПолучательНаОсновании); 
		ДанныеДоставки.Вставить("ТЗ_ТабличнаяЧастьТовары", ТЗ_ТабличнаяЧастьТовары);
		ДанныеДоставки.Вставить("СуммаДокумента", Выборка.СуммаДокумента1);
		ДанныеДоставки.Вставить("АдресДоставки", Выборка.АдресДоставки);
		ДанныеДоставки.Вставить("ПолучательГруза", Выборка.ПолучательГруза);
		ДанныеДоставки.Вставить("Контрагент", Выборка.Контрагент);
		
		ДанныеДоставки.Вставить("ИннОтправитель", Выборка.ОрганизацияИНН);  
		ДанныеДоставки.Вставить("КппОтправитель", Выборка.ОрганизацияКПП);
		ДанныеДоставки.Вставить("ИннПолучатель", Выборка.КонтрагентИНН);  
		ДанныеДоставки.Вставить("КппПолучатель", Выборка.КонтрагентКПП); 
		ДанныеДоставки.Вставить("АдресОрганизации", Выборка.АдресОрганизации);
		ДанныеДоставки.Вставить("АдресКонтрагента", Выборка.АдресКонтрагента);
		ДанныеДоставки.Вставить("УведомлениеСрывДоставкиДней", Выборка.УведомлениеСрывДоставкиДней);
		ДанныеДоставки.Вставить("ПеняПроцентЗадержкаПлатежа", Выборка.ПеняПроцентЗадержкаПлатежа);
		ДанныеДоставки.Вставить("ПеняПроцент", Выборка.ПеняПроцент);
		ДанныеДоставки.Вставить("ПериодПогрузки", Выборка.ПериодПогрузки);
		ДанныеДоставки.Вставить("ДатаОтгрузка", Формат(Выборка.ДатаОтгрузка, "ДЛФ=DD"));
		ДанныеДоставки.Вставить("ПериодРазгрузки", Выборка.ПериодРазгрузки);
		ДанныеДоставки.Вставить("МестоПередечиГрузаПеревозчику", Выборка.МестоПередечиГрузаПеревозчику);
		ДанныеДоставки.Вставить("ДокументПолучатель", Выборка.ДокументПолучатель);
		ДанныеДоставки.Вставить("КемВыданДокумент", Выборка.КемВыданДокумент);
		ДанныеДоставки.Вставить("НомерСерияДокумента", Выборка.НомерСерияДокумента);
		ДанныеДоставки.Вставить("ДатаПлатежа", Формат(Выборка.ДатаПлатежа, "ДЛФ=DD"));
        ДанныеДоставки.Вставить("СтоимостьДоставки", Выборка.СтоимостьДоставки);
		ДанныеДоставки.Вставить("СтоимостьДоставкиПогрузкаРазгрузка", Выборка.СтоимостьДоставкиПогрузкаРазгрузка);
		ДанныеДоставки.Вставить("СтоимостьДоставкиИтого", СтоимостьДоставкиИтого);	
		
	    ДокументыДоставка.Добавить(ДанныеДоставки);
		
	КонецЦикла;
	
  	Возврат ДокументыДоставка 
	
КонецФункции 



Функция ПечатьТранспортнойНакладной(МассивОбъектов, ОбъектыПечати) 
	
	
	ТабДок = Новый ТабличныйДокумент;
	
	//Макет = Документы.ДГА_Доставка.ПолучитьМакет("ПФ_MXL_ДГА_Доставка");
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ДГА_Доставка.ПФ_MXL_ДГА_Доставка"); 
	
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДГА_Доставка.Дата КАК Дата,
	|	ДГА_Доставка.Контрагент КАК Контрагент,
	|	ДГА_Доставка.Номер КАК Номер,
	|	ДГА_Доставка.Организация КАК Организация,
	|	ДГА_Доставка.Товары.(
	|		НомерСтроки КАК НомерСтроки,
	|		Номенклатура КАК Номенклатура,
	|		Количество КАК Количество
	|	) КАК Товары,
	|	ДГА_Доставка.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ДГА_Доставка КАК ДГА_Доставка
	|ГДЕ
	|	ДГА_Доставка.Ссылка В(&Ссылка)";
	Запрос.Параметры.Вставить("Ссылка", МассивОбъектов);
	Выборка = Запрос.Выполнить().Выбрать();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьТоварыШапка = Макет.ПолучитьОбласть("ТоварыШапка"); 
	
	ОбластьТовары = Макет.ПолучитьОбласть("Товары");          
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ТабДок.Очистить();
	
	ВставлятьРазделительСтраниц = Истина;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;  
		
		НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
		
		ПараметрыОбласти = Новый Структура;
		ПараметрыОбласти.Вставить("Дата", Формат(ТекущаяДатаСеанса(), "ДЛФ=D"));
		ПараметрыОбласти.Вставить("Номер", Выборка.Номер); 
		ОбластьЗаголовок.Параметры.Заполнить(ПараметрыОбласти);
		
		ТабДок.Вывести(ОбластьЗаголовок);
		
		
		Шапка.Параметры.Заполнить(Выборка);  
		
		ДанныеQRКода = ГенерацияШтрихкода.ДанныеQRКода(Выборка.Ссылка, 1, 120);
	
		Если НЕ ТипЗнч(ДанныеQRКода) = Тип("ДвоичныеДанные") Тогда
			ТекстСообщения = НСтр("ru = 'Не удалось сформировать QR-код.
			|Технические подробности см. в журнале регистрации.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Иначе
			Картинка = Новый Картинка(ДанныеQRКода);
			Шапка.Рисунки.QRкод.Картинка = Картинка;
		КонецЕсли;		
		
		ТабДок.Вывести(Шапка, Выборка.Уровень());
		
		ТабДок.Вывести(ОбластьТоварыШапка);
		ВыборкаТовары = Выборка.Товары.Выбрать();
		Пока ВыборкаТовары.Следующий() Цикл
			ОбластьТовары.Параметры.Заполнить(ВыборкаТовары);
			ТабДок.Вывести(ОбластьТовары, ВыборкаТовары.Уровень());
		КонецЦикла; 
		
		ТабДок.Вывести(ОбластьПодвал);
		
		// В табличном документе необходимо задать имя области, в которую был 
		// выведен объект. Нужно для возможности печати комплектов документов.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, 
		НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);		
	КонецЦикла; 
	
	Возврат ТабДок;
	
КонецФункции

Функция ПечатьАнкетыДоставки(МассивОбъектов, ОбъектыПечати) 
	
	
	ТабДок = Новый ТабличныйДокумент;
	
	//Макет = Документы.ДГА_Доставка.ПолучитьМакет("ПФ_MXL_ДГА_Доставка");
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ДГА_Доставка.ПФ_MXL_ДГА_Анкета"); 
	
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДГА_Доставка.Дата КАК Дата,
	|	ДГА_Доставка.Ссылка КАК Ссылка,
	|	ДГА_Доставка.Номер КАК Номер
	|ИЗ
	|	Документ.ДГА_Доставка КАК ДГА_Доставка
	|ГДЕ
	|	ДГА_Доставка.Ссылка В(&Ссылка)";
	Запрос.Параметры.Вставить("Ссылка", МассивОбъектов);
	Выборка = Запрос.Выполнить().Выбрать();
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Анкета = Макет.ПолучитьОбласть("Анкета");

	ТабДок.Очистить();
	
	ВставлятьРазделительСтраниц = Истина;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;  
		
		НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;
		
		ПараметрыОбласти = Новый Структура;
		ПараметрыОбласти.Вставить("Дата", Формат(ТекущаяДатаСеанса(), "ДЛФ=D"));
		ПараметрыОбласти.Вставить("Номер", Выборка.Номер); 
		ОбластьЗаголовок.Параметры.Заполнить(ПараметрыОбласти);
		
		ТабДок.Вывести(ОбластьЗаголовок);
		 
		
		ДанныеQRКодаАнкета = ГенерацияШтрихкода.ДанныеQRКода(Выборка.Ссылка, 1, 120);
	
		Если НЕ ТипЗнч(ДанныеQRКодаАнкета) = Тип("ДвоичныеДанные") Тогда
			ТекстСообщения = НСтр("ru = 'Не удалось сформировать QR-код.
			|Технические подробности см. в журнале регистрации.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Иначе
			Картинка = Новый Картинка(ДанныеQRКодаАнкета);
			Анкета.Рисунки.QRкодАнкета.Картинка = Картинка;
		КонецЕсли;		
		
		ТабДок.Вывести(Анкета, Выборка.Уровень());
		
		
		// В табличном документе необходимо задать имя области, в которую был 
		// выведен объект. Нужно для возможности печати комплектов документов.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, 
		НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);		
	КонецЦикла; 
	
	Возврат ТабДок;
	
КонецФункции


